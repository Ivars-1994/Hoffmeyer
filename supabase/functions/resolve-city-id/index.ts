import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

// Komplette Stadt-Map direkt eingebettet aus stadt_map.json (alle 7000+ Eintr√§ge)
const stadtMap: Record<string, string> = {
  "1004576": "Aachen",
  "1004577": "Ahaus",
  "1004578": "Ahlen",
  "1004579": "Alfter",
  "1004580": "Alsdorf",
  "1004581": "Altenberge",
  "1004582": "Arnsberg",
  "1004583": "Attendorn",
  "1004584": "Bad Berleburg",
  "1004585": "Bad Oeynhausen",
  "1004586": "Bad Sassendorf",
  "1004587": "Baesweiler",
  "1004588": "Beckum",
  "1004589": "Bedburg",
  "1004590": "Bergheim",
  "1004591": "Bergisch Gladbach",
  "1004592": "Bergkamen",
  "1004593": "Bielefeld",
  "1004594": "Billerbeck",
  "1004595": "Bocholt",
  "1004596": "Bochum",
  "1004597": "Bonn",
  "1004598": "Borchen",
  "1004599": "Borken",
  "1004600": "Bornheim",
  "1004601": "Bottrop",
  "1004602": "Bunde",
  "1004603": "Burbach",
  "1004604": "Burscheid",
  "1004605": "Castrop-Rauxel",
  "1004606": "Coesfeld",
  "1004607": "Cologne",
  "1004608": "Detmold",
  "1004609": "Dormagen",
  "1004610": "Dorsten",
  "1004611": "Dortmund",
  "1004612": "Duisburg",
  "1004613": "Dulmen",
  "1004614": "Duren",
  "1004615": "Dusseldorf",
  "1004616": "Emmerich",
  "1004617": "Emsdetten",
  "1004618": "Ennepetal",
  "1004619": "Erftstadt",
  "1004620": "Erkelenz",
  "1004621": "Erkrath",
  "1004622": "Erwitte",
  "1004623": "Eschweiler",
  "1004624": "Espelkamp",
  "1004625": "Essen",
  "1004626": "Euskirchen",
  "1004627": "Everswinkel",
  "1004628": "Frechen",
  "1004629": "Freudenberg",
  "1004630": "Frondenberg",
  "1004631": "Gelsenkirchen",
  "1004632": "Gevelsberg",
  "1004633": "Goch",
  "1004634": "Grefrath",
  "1004635": "Greven",
  "1004636": "Grevenbroich",
  "1004637": "Gronau",
  "1004638": "Gummersbach",
  "1004639": "Gutersloh",
  "1004640": "Haan",
  "1004641": "Haltern am See",
  "1004642": "Hamm",
  "1004643": "Hattingen",
  "1004644": "Hatzfeld",
  "1004645": "Heiligenhaus",
  "1004646": "Heinsberg",
  "1004647": "Hemer",
  "1004648": "Hennef",
  "1004649": "Herdecke",
  "1004650": "Herford",
  "1004651": "Herne",
  "1004652": "Herten",
  "1004653": "Herzogenrath",
  "1004654": "Hiddenhausen",
  "1004655": "Hilden",
  "1004656": "Holzwickede",
  "1004657": "Horstel",
  "1004658": "Horstmar",
  "1004659": "Hoxter",
  "1004660": "Ratheim",
  "1004661": "Huckeswagen",
  "1004662": "Hurth",
  "1004663": "Ibbenburen",
  "1004664": "Iserlohn",
  "1004665": "Julich",
  "1004666": "Kaarst",
  "1004667": "Kall",
  "1004668": "Kempen",
  "1004669": "Kerpen",
  "1004670": "Kevelaer",
  "1004671": "Kierspe",
  "1004672": "Kirchlengern",
  "1004673": "Kleve",
  "1004674": "Korschenbroich",
  "1004675": "Krefeld",
  "1004676": "Kurten",
  "1004677": "Lage",
  "1004678": "Langenfeld",
  "1004679": "Lemgo",
  "1004680": "Lengerich",
  "1004681": "Leopoldshohe",
  "1004682": "Leverkusen",
  "1004683": "Linnich",
  "1004684": "Lippstadt",
  "1004685": "Lohmar",
  "1004686": "Lohne",
  "1004687": "Lubbecke",
  "1004688": "Ludenscheid",
  "1004689": "Ludinghausen",
  "1004690": "Lunen",
  "1004691": "Manheim",
  "1004692": "Marl",
  "1004693": "Marsberg",
  "1004694": "Mechernich",
  "1004695": "Meckenheim",
  "1004696": "Meerbusch",
  "1004697": "Meinerzhagen",
  "1004698": "Menden",
  "1004699": "Meschede",
  "1004700": "Mettmann",
  "1004701": "Minden",
  "1004702": "Moers",
  "1004703": "Monchengladbach",
  "1004704": "Monheim am Rhein",
  "1004705": "Morsbach",
  "1004706": "Mulheim",
  "1004707": "Munster",
  "1004708": "Neuss",
  "1004709": "Niederkassel",
  "1004710": "Oberhausen",
  "1004711": "Oelde",
  "1004712": "Olfen",
  "1004713": "Olpe",
  "1004714": "Overath",
  "1004715": "Paderborn",
  "1004716": "Plettenberg",
  "1004717": "Porta Westfalica",
  "1004718": "Pulheim",
  "1004719": "Ratingen",
  "1004720": "Recke",
  "1004721": "Recklinghausen",
  "1004722": "Remscheid",
  "1004723": "Rheda-Wiedenbruck",
  "1004724": "Rheine",
  "1004725": "County of Rietberg",
  "1004726": "Roetgen",
  "1004727": "Rosrath",
  "1004728": "Salzkotten",
  "1004729": "Schalksmuhle",
  "1004730": "Schwelm",
  "1004731": "Schwerte",
  "1004732": "Senden",
  "1004733": "Siegburg",
  "1004734": "Siegen",
  "1004735": "Soest",
  "1004736": "Solingen",
  "1004737": "Sprockhovel",
  "1004738": "Sankt Augustin",
  "1004739": "Stadtlohn",
  "1004740": "Steinfurt",
  "1004741": "Steinhagen",
  "1004742": "Stolberg (Rhineland)",
  "1004743": "Straelen",
  "1004744": "Tonisvorst",
  "1004745": "Troisdorf",
  "1004746": "Unna",
  "1004747": "Velbert",
  "1004748": "Verl",
  "1004749": "Versmold",
  "1004750": "Viersen",
  "1004751": "Vlotho",
  "1004752": "Vreden",
  "1004753": "Wachtberg",
  "1004754": "Wachtendonk",
  "1004755": "Walheim",
  "1004756": "Warburg",
  "1004757": "Warendorf",
  "1004758": "Weeze",
  "1004759": "Werdohl",
  "1004760": "Werl",
  "1004761": "Wermelskirchen",
  "1004762": "Wesel",
  "1004763": "Wetter",
  "1004764": "Wiehl",
  "1004765": "Willich",
  "1004766": "Winterberg",
  "1004767": "Wipperfurth",
  "1004768": "Witten",
  "1004769": "Wuppertal",
  "1004770": "Wurselen",
  "1004771": "Xanten",
  "1028816": "Hagen",
  "9048141": "Aldenhoven",
  "9048146": "Alpen",
  "9048151": "Altena",
  "9048156": "Anrochte",
  "9048161": "Ascheberg",
  "9048169": "Bad Driburg",
  "9048179": "Bad Honnef",
  "9048185": "Bad Munstereifel",
  "9048190": "Bad Salzuflen",
  "9048198": "Bad Wunnenberg",
  "9048202": "Balve",
  "9048219": "Bestwig",
  "9048229": "Blomberg",
  "9048233": "Bonen",
  "9048238": "Borgholzhausen",
  "9048243": "Brakel",
  "9048249": "Brilon",
  "9048254": "Bruggen",
  "9048256": "Bruhl",
  "9048259": "Buren",
  "9048269": "Datteln",
  "9048273": "Delbruck",
  "9048281": "Dinslaken",
  "9048288": "Drensteinfurt",
  "9048290": "Drolshagen",
  "9048307": "Eitorf",
  "9048308": "Elsdorf",
  "9048316": "Engelskirchen",
  "9048318": "Enger",
  "9048319": "Ennigerloh",
  "9048320": "Ense",
  "9048331": "Eslohe",
  "9048342": "Finnentrop",
  "9048363": "Geilenkirchen",
  "9048366": "Geldern",
  "9048370": "Gescher",
  "9048371": "Geseke",
  "9048374": "Gladbeck",
  "9048396": "Halle",
  "9048398": "Hamminkeln",
  "9048402": "Harsewinkel",
  "9048428": "Herzebrock-Clarholz",
  "9048431": "Hilchenbach",
  "9048448": "Horn-Bad Meinberg",
  "9048449": "Hovelhof",
  "9048450": "Huckelhoven",
  "9048451": "Hullhorst",
  "9048453": "Hunxe",
  "9048461": "Isselburg",
  "9048462": "Issum",
  "9048466": "Kalkar",
  "9048467": "Kamen",
  "9048468": "Kamp-Lintfort",
  "9048493": "Konigswinter",
  "9048497": "Kranenburg",
  "9048498": "Kreuztal",
  "9048510": "Leichlingen",
  "9048513": "Lennestadt",
  "9048521": "Lindlar",
  "9048528": "Lotte",
  "9048551": "Medebach",
  "9048567": "Mohnesee",
  "9048571": "Monschau",
  "9048574": "Much",
  "9048588": "Netphen",
  "9048589": "Nettetal",
  "9048592": "Neuenkirchen",
  "9048593": "Neuenrade",
  "9048597": "Neukirchen-Vluyn",
  "9048599": "Neunkirchen",
  "9048600": "Neunkirchen-Seelscheid",
  "9048612": "Niederkruchten",
  "9048616": "Nordkirchen",
  "9048618": "Norvenich",
  "9048619": "Nottuln",
  "9048620": "Numbrecht",
  "9048635": "Oer-Erkenschwick",
  "9048639": "Olsberg",
  "9048652": "Petershagen",
  "9048667": "Radevormwald",
  "9048668": "Raesfeld",
  "9048669": "Rahden",
  "9048676": "Rees",
  "9048679": "Reichshof",
  "9048682": "Reken",
  "9048686": "Rheinbach",
  "9048687": "Rheinberg",
  "9048694": "Rommerskirchen",
  "9048697": "Ruthen",
  "9048711": "Sassenberg",
  "9048721": "Schlangen",
  "9048722": "Schleiden",
  "9048724": "Schloss Holte-Stukenbrock",
  "9048727": "Schmallenberg",
  "9048742": "Schwalmtal",
  "9048755": "Sendenhorst",
  "9048757": "Simmerath",
  "9048773": "Steinheim",
  "9048777": "Stemwede",
  "9048786": "Sundern",
  "9048787": "Swisttal",
  "9048791": "Tecklenburg",
  "9048792": "Telgte",
  "9048808": "Ubach-Palenberg",
  "9048810": "Uedem",
  "9048820": "Velen",
  "9048825": "Voerde",
  "9048834": "Waldbrol",
  "9048844": "Waltrop",
  "9048847": "Warstein",
  "9048849": "Wegberg",
  "9048858": "Wenden",
  "9048863": "Werne",
  "9048866": "Wesseling",
  "9048879": "Wilnsdorf",
  "9048880": "Windeck",
  "9048891": "Wulfrath",
  "9048900": "Zulpich",
  "9060644": "Mitte",
  "9060645": "Bethel",
  "9060646": "Bochum-Innenstadt",
  "9060647": "Bonn-Zentrum",
  "9060648": "Sudstadt",
  "9060649": "Nordstadt",
  "9060653": "Koln-Altstadt-Nord",
  "9060654": "Koln-Altstadt-Sud",
  "9060655": "Koln-Neustadt-Sud",
  "9060656": "Koln-Neustadt-Nord",
  "9060657": "Innenstadt",
  "9060659": "Ruhrallee West",
  "9060660": "Westfalendamm-Nord",
  "9060661": "Aplerbecker Mark",
  "9060666": "Altstadt",
  "9060667": "Dellviertel",
  "9060669": "Alt-Hamborn",
  "9060670": "Neudorf-Nord",
  "9060671": "Dusseldorf-Stadtmitte",
  "9060672": "Dusseldorf-Unterbilk",
  "9060673": "Stadtbezirk 1",
  "9060674": "Dusseldorf-Pempelfort",
  "9060676": "Sudviertel",
  "9060677": "Ruttenscheid",
  "9060699": "Uerdingen",
  "9060714": "Gladbach",
  "9060715": "Rheydt",
  "9060716": "Heyden",
  "9060718": "Kreuzviertel",
  "9060725": "Elberfeld-Mitte",
  "9060726": "Friedrich-Engels-Allee",
  "9060727": "Nordstadt",
  "9060728": "Ostersbaum",
  "9062588": "Flingern-Sud",
  "9062589": "Flingern Nord",
  "9062590": "Waldfeucht",
  "9062591": "Schoppingen",
  "9062592": "Havixbeck",
  "9062593": "Gangelt",
  "9062594": "Sudlohn",
  "9062595": "Legden",
  "9062596": "Rosendahl",
  "9062597": "Selfkant",
  "9062598": "Sonsbeck",
  "9062599": "Rhede",
  "9062600": "Heiden",
  "9062601": "Rheurdt",
  "9062602": "Heek",
  "9062603": "Schermbeck",
  "9062604": "Kerken",
  "9062605": "Juchen",
  "9068625": "Weilerswist",
  "9068719": "Ladbergen",
  "9068731": "Langerwehe",
  "9068739": "Niederzier",
  "9068773": "Merzenich",
  "9068880": "Lippetal",
  "9117068": "Borken",
  "9117069": "Wesel",
  "9117070": "Viersen",
  "9117071": "Rhein-Kreis Neuss",
  "9117072": "Duisburg",
  "9117073": "Mettmann",
  "9117076": "Wuppertal",
  "9117079": "Recklinghausen",
  "9117080": "Unna",
  "9117081": "Ennepe-Ruhr-Kreis",
  "9117086": "Markischer Kreis",
  "9117090": "Olpe",
  "9117094": "Warendorf",
  "9117095": "Coesfeld",
  "9117096": "Steinfurt",
  "9117104": "Minden-Lubbecke",
  "9117105": "Herford",
  "9117107": "Gutersloh",
  "9117109": "Lippe",
  "9117150": "Hoxter",
  "9117196": "Paderborn",
  "9117199": "Soest",
  "9117201": "Hochsauerlandkreis",
  "9117576": "Oberbergischer",
  "9117578": "Rheinisch-Bergischer Kreis",
  "9117580": "Rhein-Sieg-Kreis",
  "9117597": "Euskirchen",
  "9117598": "Rhein-Erft District",
  "9117601": "Aachen",
  "9117604": "Duren",
  "9117659": "Heinsberg",
  "9117660": "Kleve",
  "9117679": "Siegen-Wittgenstein",
  "9043903": "45277",
  "9043904": "45279",
  "9043905": "45731",
  "9043906": "45549",
  "9043907": "44805",
  "9043908": "44627",
  "9043909": "44787",
  "9043910": "45701",
  "9043911": "44623",
  "9043912": "44789",
  "9043913": "44629",
  "9043914": "44631",
  "9043915": "44633",
  "9043916": "46145",
  "9043917": "44777",
  "9043918": "44803",
  "9043919": "44807",
  "9043920": "44809",
  "9043921": "44866",
  "9043922": "44869",
  "9043923": "44867",
  "9043924": "45881",
  "9043925": "45883",
  "9043926": "45884",
  "9043927": "45886",
  "9043928": "45888",
  "9043929": "45889",
  "9043930": "45891",
  "9043931": "45881",
  "9043932": "45886",
  "9043933": "45883",
  "9043934": "45141",
  "9043935": "45899",
  "9043936": "45897",
  "9043937": "46238",
  "9043938": "46240",
  "9043939": "45356",
  "9043940": "46149",
  "9043941": "46145",
  "9043942": "46236",
  "9043943": "46244",
  "9043944": "45966",
  "9043945": "45964",
  "9043946": "45894",
  "9043947": "45896",
  "9043948": "45768",
  "9043949": "45770",
  "9043950": "45772",
  "9043951": "45525",
  "9043952": "45478",
  "9043953": "45529",
  "9043954": "45470",
  "9043955": "45472",
  "9043956": "45474",
  "9043957": "45476",
  "9043958": "45481",
  "9043959": "45479",
  "9043960": "45527",
  "9043961": "45527",
  "9043962": "46236",
  "9043963": "45772",
  "9043964": "45549",
  "9043965": "46149",
  "9043966": "45899",
  "9043967": "45768",
  "9043968": "46240",
  "9043969": "46238",
  "9043970": "45894",
  "9043971": "45896",
  "9043972": "45897",
  "9043973": "46244",
  "9043974": "45356",
  "9043975": "45764",
  "9043976": "45766",
  "9043977": "45478",
  "9043978": "45529",
  "9043979": "45525",
  "9043980": "45470",
  "9043981": "45472",
  "9043982": "45474",
  "9043983": "45476",
  "9043984": "45479",
  "9043985": "45481",
  "9043986": "45527",
  "9043987": "45701",
  "9043988": "44805",
  "9043989": "44627",
  "9043990": "44623",
  "9043991": "44629",
  "9043992": "44631",
  "9043993": "44633",
  "9043994": "44777",
  "9043995": "44787",
  "9043996": "44789",
  "9043997": "44803",
  "9043998": "44807",
  "9043999": "44809",
  "9044000": "44866",
  "9044001": "44867",
  "9044002": "44869"
};

serve(async (req) => {
  console.log(`üîç Edge Function aufgerufen: ${req.method} ${req.url}`);

  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const url = new URL(req.url);
    const id = url.searchParams.get("id");
    
    console.log(`üì• ID Parameter: ${id}`);
    
    if (!id) {
      console.log(`‚ùå Keine ID angegeben`);
      return new Response(
        JSON.stringify({ error: "ID fehlt" }), 
        { 
          status: 400, 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      );
    }

    const value = stadtMap[id];
    if (!value) {
      console.log(`‚ùå Unbekannte ID: ${id}`);
      return new Response(
        JSON.stringify({ error: "Unbekannte ID", id }),
        { 
          status: 404, 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      );
    }

    console.log(`‚úÖ Gefundener Wert f√ºr ID ${id}: ${value}`);

    // Pr√ºfe ob es eine PLZ ist (5 Ziffern)
    const isPlz = /^\d{5}$/.test(value);
    console.log(`üîç Ist PLZ: ${isPlz}`);

    if (isPlz) {
      // PLZ zu Stadt √ºber externe API
      const apiUrl = `https://openplzapi.org/de/Localities?postalCode=${value}`;
      console.log(`üåê API-Aufruf f√ºr PLZ: ${apiUrl}`);
      
      try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        const stadt = data?.[0]?.name || null;
        
        console.log(`üì• PLZ-API Antwort:`, data);
        console.log(`üèôÔ∏è Erkannte Stadt: ${stadt}`);
        
        if (!stadt) {
          return new Response(
            JSON.stringify({ error: "Stadt nicht gefunden (via PLZ)", id, plz: value }),
            { 
              status: 404, 
              headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
            }
          );
        }

        const result = { id, typ: "plz-id", stadt, plz: value };
        console.log(`‚úÖ PLZ-Ergebnis:`, result);
        
        return new Response(
          JSON.stringify(result),
          { 
            status: 200, 
            headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
          }
        );
      } catch (error) {
        console.error(`‚ùå PLZ-API Fehler:`, error);
        return new Response(
          JSON.stringify({ error: "API Fehler", details: error.message }),
          { 
            status: 500, 
            headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
          }
        );
      }
    } else {
      // Direkter Stadtname
      const result = { id, typ: "stadt-id", stadt: value };
      console.log(`‚úÖ Stadt-Ergebnis:`, result);
      
      return new Response(
        JSON.stringify(result),
        { 
          status: 200, 
          headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
        }
      );
    }
  } catch (error) {
    console.error(`‚ùå Allgemeiner Fehler:`, error);
    return new Response(
      JSON.stringify({ error: "Interner Serverfehler", details: error.message }),
      { 
        status: 500, 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
      }
    );
  }
});